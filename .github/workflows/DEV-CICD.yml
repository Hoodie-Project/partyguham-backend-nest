# .github/workflows/deploy.yml
name: DEV Build & Deploy (Docker + GHCR)

on:
  push: { branches: [release] }
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # GHCR 푸시 권한
    steps:
      - uses: actions/checkout@v4

      # GHCR 로그인 (푸시용). TOKEN_GITHUB = PAT (write:packages 권장)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      # 멀티아치 빌드를 위해 QEMU + Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/iysh321/partyguham-backend-nest:dev-latest
            ghcr.io/iysh321/partyguham-backend-nest:${{ github.sha }}
          # 캐시 단순화를 원하면 아래 두 줄 제거 가능
          cache-from: type=registry,ref=ghcr.io/iysh321/partyguham-backend-nest:buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/iysh321/partyguham-backend-nest:buildcache

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Upload docker-compose.dev.yml
        # ↓↓↓ scp-action에 source/target을 넣습니다
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          source: 'docker-compose.dev.yml'
          target: '/Users/macmini/partyguam/dev/partyguham-backend-nest'

      - name: Remote deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          source: 'docker-compose.dev.yml'
          script: |
            export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"

            cd /Users/macmini/partyguam/dev/partyguham-backend-nest

            # (맥/colima) 데몬 컨텍스트 고정
            docker context use colima || true

            # GHCR 로그인 (프라이빗이면 필수)
            echo ${{ secrets.TOKEN_GITHUB }} | docker login ghcr.io -u iysh321 --password-stdin

            # 최신 이미지 풀 & 기동 (동일 파일 사용)
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml up -d
            docker-compose -f docker-compose.dev.yml ps

            # 이미지 정리
            docker image prune -f
